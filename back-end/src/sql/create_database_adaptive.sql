DROP DATABASE IF EXISTS scratchdb;
CREATE DATABASE IF NOT EXISTS scratchdb;
use scratchdb;

-- DataSet Table
DROP TABLE IF EXISTS DataSet;
CREATE TABLE DataSet (
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
        FromFile VARCHAR(255) NOT NULL,
        Descr VARCHAR(255),
	ImportDate DATETIME NOT NULL,
        CollectDate DATETIME NOT NULL,
	INDEX(CollectDate),	
	INDEX(FromFile),
	PRIMARY KEY (id) )ENGINE=MyISAM;

-- OriginTable Table
DROP TABLE IF EXISTS OriginTable;
CREATE TABLE OriginTable (
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT, 
	Origin VARCHAR(10) NOT NULL,
	PRIMARY KEY (id) )ENGINE=MyISAM;

-- AggrTable Table
DROP TABLE IF EXISTS AggrTable;
CREATE TABLE AggrTable (
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	Aggr VARCHAR(3) NOT NULL,
	PRIMARY KEY (id) )ENGINE=MyISAM;

-- Message Table
DROP TABLE IF EXISTS Message; 
CREATE TABLE Message ( 
        MsgID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	DataSetID INT NOT NULL REFERENCES DataSet(id), 
	BGPVersionID TINYINT NOT NULL,
        MsgType CHAR(1) NOT NULL,
        MsgTime DATETIME NOT NULL,
        PeerIPID MEDIUMINT UNSIGNED,
        PeerAS MEDIUMINT UNSIGNED,
	PrefixID MEDIUMINT UNSIGNED,
	PrefixMask TINYINT UNSIGNED,
	MsgPathID INT UNSIGNED,
	OriginID TINYINT REFERENCES OriginTable(id),
	NextHopID MEDIUMINT UNSIGNED,
	Med INT UNSIGNED,
	CommunityID INT UNSIGNED,
        AggregateID TINYINT REFERENCES AggrTable(id),
 	AggregateIPID MEDIUMINT UNSIGNED,
	#INDEX(PrefixID),
	#INDEX(PeerIPID),
	#INDEX(DataSetID),
	#INDEX(MsgTime),
	#INDEX(MsgPathID),
	#INDEX(CommunityID),
	#INDEX(MsgType),
	PRIMARY KEY(MsgID) )ENGINE=MyISAM;

-- MsgPath Table
DROP TABLE IF EXISTS MsgPath;
CREATE TABLE MsgPath (
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
 	MsgPathID INT UNSIGNED NOT NULL REFERENCES ASPath(ASPathID),
        PathOrder TINYINT NOT NULL,
        ASN MEDIUMINT UNSIGNED,
        Alternative INT NOT NULL,
	INDEX(MsgPathID),
	INDEX(PathOrder),
	INDEX(ASN),
     	PRIMARY KEY(id) )ENGINE=MyISAM;

-- ASPath Table
DROP TABLE IF EXISTS ASPath;
CREATE TABLE ASPath (
 	ASPathID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ASPath VARCHAR(9999),
	INDEX(ASPath),
	#INDEX(ASPathID),
	PRIMARY KEY(ASPathID))ENGINE=MyISAM;

-- PrefixOriginASN Table
#DROP TABLE IF EXISTS PrefixOriginASN;
#CREATE TABLE PrefixOriginASN (
# 	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
#    Prefix VARCHAR(25),
#	ASN MEDIUMINT UNSIGNED,
#	INDEX(ID),
#	INDEX(Prefix),
#	INDEX(ASN),
#	PRIMARY KEY(ID) );

-- IPTable Table 
DROP TABLE IF EXISTS IPTable;
CREATE TABLE IPTable (
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	IPval BIGINT UNSIGNED,
	IP VARCHAR(16),
	INDEX(IP),
	PRIMARY KEY (id) )ENGINE=MyISAM;

DROP TABLE IF EXISTS BGPVersion;
CREATE TABLE BGPVersion (
	ID TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
	Protocol VARCHAR(5),
	PRIMARY KEY (id) )ENGINE=MyISAM;


DROP TABLE IF EXISTS Community;
CREATE TABLE Community (
	CommunityID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	Community VARCHAR(999),
	INDEX(CommunityID),
	PRIMARY KEY (CommunityID) )ENGINE=MyISAM;


DROP TABLE IF EXISTS GeoInfo;
CREATE TABLE GeoInfo (
	GeoID INT UNSIGNED NOT NULL AUTO_INCREMENT,
 	IP VARCHAR(16) NOT NULL,
	Country VARCHAR(255),
    Region VARCHAR(255),
	City VARCHAR(255),
    Lattitude FLOAT,
	Longitude FLOAT,
	INDEX(IP),
	INDEX(Country),
	PRIMARY KEY(GeoID) )ENGINE=MyISAM;

DROP TABLE IF EXISTS PingOutage;
CREATE TABLE PingOutage (
	OutageID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	DataSetID INT NOT NULL REFERENCES DataSet(id),
 	IPBlock VARCHAR(16) NOT NULL,
	VantageStatus VARCHAR(10) NOT NULL,
	Uncertainty FLOAT,
	BlockAggr VARCHAR(25) NOT NULL,
	OutageStart DATETIME NOT NULL,
	OutageEnd DATETIME NOT NULL,
	#INDEX(OutageID),
	INDEX(OutageStart),
	INDEX(OutageEnd),
	INDEX(DataSetID),
	INDEX(VantageStatus),
	INDEX(BlockAggr),
	PRIMARY KEY(OutageID) )ENGINE=MyISAM;

DROP TABLE IF EXISTS OutageInfo;
CREATE TABLE OutageInfo (
	InfoID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	OutageID INT UNSIGNED NOT NULL REFERENCES PingOutage(OutageID),
	PeerIP VARCHAR(25) NOT NULL,
	BGP_LPM VARCHAR(25) NOT NULL,
	INDEX(OutageID),
	INDEX(BGP_LPM),
	INDEX(PeerIP),
	PRIMARY KEY(InfoID) )ENGINE=MyISAM;
# ALTER TABLE OutageInfo ADD UNIQUE INDEX idx (OutageID, PeerIP, BGP_LPM);

DROP TABLE IF EXISTS LookupTable;
CREATE TABLE LookupTable (
	LookupID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	RIB_Time VARCHAR(25) NOT NULL,
	PeerIP VARCHAR(16) NOT NULL,
	Prefix VARCHAR(25)  NOT NULL,
	INDEX(PeerIP),
	INDEX(RIB_Time),
	INDEX(Prefix),
	PRIMARY KEY(LookupID) )ENGINE=MyISAM;
-- insert values for complimentary tables --------------------

-- how BGP information was learned
INSERT INTO OriginTable VALUES(NULL,'IGP');
INSERT INTO OriginTable VALUES(NULL,'INCOMPLETE');
INSERT INTO OriginTable VALUES(NULL,'EGP');
INSERT INTO OriginTable VALUES(NULL,'ERR'); -- error

-- not aggregated (NAG) or aggregated (AG)
INSERT INTO AggrTable VALUES(NULL,'NAG');
INSERT INTO AggrTable VALUES(NULL,'AG');
INSERT INTO AggrTable VALUES(NULL,'ERR');  -- error

-- BGP Protocol version
INSERT INTO BGPVersion VALUES(NULL,'BGP');
INSERT INTO BGPVersion VALUES(NULL,'BGP4');
INSERT INTO BGPVersion VALUES(NULL,'BGP4MP');
INSERT INTO BGPVersion VALUES(NULL,'ERR');
